{"version":3,"sources":["../../../../react-components/table/EventFilters.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAIqB,YAAY;;;;;;;qCAGb,KAAK,EAAE;AACnB,uBAAO,KAAK,CAAC;aAChB;;;4CAGsB,KAAK,EAAE;AAC1B,oBAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,UAAC,GAAG,EAAK;AACjC,2BAAO,GAAG,CAAC,IAAI,CAAC;iBACnB,CAAC;;;AAAC,AAGH,uBAAO;;;AAGH,kCAAc,EAAE,IAAI;;;;;;;;;;;AAWpB,sCAAkB,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS;iBAC3C,CAAC;aACL;;;;;;sBA9BgB,YAAY","file":"EventFilters.js","sourcesContent":["\n// A static class with filters for various table events. Think of these methods as\n// adapters that convert a low level DOM event into meaningful data appropriate to pass\n// back to a React table callback function.\nexport default class EventFilters {\n\n    // Simple passthrough\n    static noFilter(event) {\n        return event;\n    }\n\n    // Filter for select/deselect events\n    static filterSelection(event) {\n        const rows = event.rows.map((row) => {\n            return row.data;\n        });\n\n        // Return cleaned up results\n        return {\n            // This is the row data for all rows that were selected/deselected by the\n            // event that triggered this\n            eventSelection: rows,\n\n            // This is the current selection for the overall table and NOT from the\n            // event that triggered this\n            // It will return an object with with row IDs as keys and true/false if they are\n            // selected or not\n            //\n            // {\n            //   1: true,\n            //   2: false\n            // }\n            tableSelectionById: event.grid.selection\n        };\n    }\n\n}\n"]}