{"version":3,"sources":["../../../../react-components/table/config.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;sBAGe;;;;AAIX,qBAAa,EAAE;AACX,iCAAqB,EAAE,IAAI;AAC3B,uBAAW,EAAE,IAAI;AACjB,kCAAsB,EAAE,IAAI;AAC5B,wCAA4B,EAAE,IAAI;AAClC,mBAAO,EAAE,IAAI;AACb,kBAAM,EAAE,IAAI;SACf;;;;;AAKD,mBAAW,EAAE;AACT,uBAAW,EAAE,IAAI;AACjB,uBAAW,EAAE,IAAI;AACjB,mBAAO,EAAE,IAAI;AACb,kBAAM,EAAE,IAAI;AACZ,6BAAiB,EAAE,IAAI;AACvB,kBAAM,EAAE,IAAI;AACZ,gBAAI,EAAE,IAAI;SACb;;;;;AAKD,yBAAiB,EAAE;AACf,oBAAQ,EAAE;AACN,oBAAI,EAAE,aAAa;AACnB,sBAAM,EAAE,uBAAa,QAAQ;aAChC;AACD,gCAAoB,EAAE;AAClB,oBAAI,EAAE,sBAAsB;AAC5B,sBAAM,EAAE,uBAAa,QAAQ;aAChC;AACD,0BAAc,EAAE;AACZ,oBAAI,EAAE,eAAe;AACrB,sBAAM,EAAE,uBAAa,QAAQ;aAChC;AACD,wBAAY,EAAE;AACV,oBAAI,EAAE,YAAY;AAClB,sBAAM,EAAE,uBAAa,QAAQ;aAChC;AACD,sBAAU,EAAE;AACR,oBAAI,EAAE,gBAAgB;AACtB,sBAAM,EAAE,uBAAa,eAAe;aACvC;AACD,mBAAO,EAAE;AACL,oBAAI,EAAE,OAAO;AACb,sBAAM,EAAE,uBAAa,QAAQ;aAChC;AACD,oBAAQ,EAAE;AACN,oBAAI,EAAE,QAAQ;AACd,sBAAM,EAAE,uBAAa,QAAQ;aAChC;AACD,qBAAS,EAAE;AACP,oBAAI,EAAE,SAAS;AACf,sBAAM,EAAE,uBAAa,QAAQ;aAChC;AACD,oBAAQ,EAAE;AACN,oBAAI,EAAE,cAAc;AACpB,sBAAM,EAAE,uBAAa,eAAe;aACvC;AACD,kBAAM,EAAE;AACJ,oBAAI,EAAE,WAAW;AACjB,sBAAM,EAAE,uBAAa,QAAQ;aAChC;AACD,kBAAM,EAAE;AACJ,oBAAI,EAAE,MAAM;AACZ,sBAAM,EAAE,uBAAa,QAAQ;aAChC;SACJ;;KAEJ","file":"config.js","sourcesContent":["import EventFilters from \"./EventFilters\";\n\n// Configurations and constants for the Table.jsx class\nexport default {\n\n    // Custom options or options that require special handling. These options are specific to this React wrapper and we need to adapt them before we apply them to\n    // HATable instance.\n    customOptions: {\n        onOtherSettingsRender: true,\n        renderModes: true,\n        onTableBarCustomRender: true,\n        onTableBarCustomActionRender: true,\n        virtual: true,\n        totals: true\n    },\n\n    // Expose some methods on this React wrapper to call the corresponding API methods on\n    // the underlying table instance.\n    //   @see https://facebook.github.io/react/tips/expose-component-functions.html\n    apiToExpose: {\n        clearErrors: true,\n        onClickEdit: true,\n        refresh: true,\n        resize: true,\n        resizeColumnWidth: true,\n        revert: true,\n        save: true\n    },\n\n    // A list of callback functions and events they correspond to on the underlying\n    // HATable instance. We'll listen for these events and call the corresponding\n    // callbacks to make this component more React friendly.\n    eventsToCallbacks: {\n        onCancel: {\n            name: \"edit-cancel\",\n            filter: EventFilters.noFilter\n        },\n        onColumnHiddenChange: {\n            name: \"column-hidden-change\",\n            filter: EventFilters.noFilter\n        },\n        onColumnResize: {\n            name: \"column-resize\",\n            filter: EventFilters.noFilter\n        },\n        onDatachange: {\n            name: \"datachange\",\n            filter: EventFilters.noFilter\n        },\n        onDeselect: {\n            name: \"batch-deselect\",\n            filter: EventFilters.filterSelection\n        },\n        onError: {\n            name: \"error\",\n            filter: EventFilters.noFilter\n        },\n        onExport: {\n            name: \"export\",\n            filter: EventFilters.noFilter\n        },\n        onRefresh: {\n            name: \"refresh\",\n            filter: EventFilters.noFilter\n        },\n        onSelect: {\n            name: \"batch-select\",\n            filter: EventFilters.filterSelection\n        },\n        onSave: {\n            name: \"edit-save\",\n            filter: EventFilters.noFilter\n        },\n        onSort: {\n            name: \"sort\",\n            filter: EventFilters.noFilter\n        }\n    }\n\n};\n"]}